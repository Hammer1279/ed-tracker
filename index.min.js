const fs=require("fs"),superagent=require("superagent"),WebSocketClient=require("websocket").client,events=require("events"),client=new WebSocketClient;let EventStream,sendData=function(){throw"Connection not yet Established!"},pending=!1;class EDTracker extends events.EventEmitter{constructor(){super(),EventStream=this,this.login=function(e,n="api.drillkea.com:80"){client.connect("ws://"+n,"ed-tracker","ED-Tracker-Client",{apikey:e})},this.events=this,this.send=sendData,this.appendStream=function(e,n){var t=new Array;e.on(n,e=>function(e){t.push(JSON.stringify(e))}(e)),setInterval(()=>{t.length>0&&(sendData(t[0]),t.shift())},500)}}}function log(e){if(!EventStream)throw"Missing EventStream";EventStream.emit("data",e),fs.appendFileSync(__dirname+"/log.txt",(new Date).toLocaleString()+" | "+e+"\r\n")}function error(e){if(!EventStream)throw"Missing EventStream";EventStream.emit("error",e),fs.appendFileSync(__dirname+"/log.txt","ERROR: "+(new Date).toLocaleString()+" | "+e+"\r\n")}client.on("connectFailed",(function(e){log("Connect Error: "+e.toString())})),client.on("connect",(function(e){global.connection=e;let n=setInterval(()=>{if(pending)return e.drop();e.ping("KEEP_ALIVE"),pending=!0},3e4);log("Connection to Server established"),e.on("error",(function(e){e("Connection Error: "+e.toString())})),e.on("close",(function(){clearInterval(n),log("Connection Closed")})),e.on("message",(function(e){"utf8"===e.type&&(log("Received: "+JSON.stringify(e.utf8Data)),EventStream.emit("message",JSON.parse(e.utf8Data)))})),e.on("pong",e=>{pending&&(pending=!1),log("Pong: "+JSON.stringify(e))}),sendData=function(n){e.connected?(log("Sent: "+n),e.send(n)):log("Error: Not connected yet!")}})),module.exports=EDTracker;