const fs=require("fs"),superagent=require("superagent"),WebSocketClient=require("websocket").client,events=require("events"),client=new WebSocketClient;let EventStream;class EDTracker extends events.EventEmitter{constructor(){super(),EventStream=this,this.login=function(e){client.connect("ws://api.drillkea.com:80/","ed-tracker","ED-Tracker-Client",{apikey:e})},this.events=this,this.send=sendData,this.appendStream=function(e,n){var t=new Array;e.on(n,e=>function(e){t.push(e)}(e)),setInterval(()=>{t.length>0&&(sendData(t[0]),t.shift())},500)}}}function log(e){if(!EventStream)throw"Missing EventStream";EventStream.emit("data",e),fs.appendFileSync(__dirname+"/log.txt",(new Date).toLocaleString()+" | "+e+"\r\n")}function sendData(e){connection?connection.connected?connection.send(e):log("Error: Not connected yet!"):log("Error: Not Logged in yet!")}client.on("connectFailed",(function(e){log("Connect Error: "+e.toString())})),client.on("connect",(function(e){global.connection=e,log("Connection to Server established"),e.on("error",(function(e){log("Connection Error: "+e.toString())})),e.on("close",(function(){log("Connection Closed")})),e.on("message",(function(e){"utf8"===e.type&&(log("Received: "+e.utf8Data),EventStream.emit("message",JSON.parse(e.utf8Data)))}))})),module.exports=EDTracker;